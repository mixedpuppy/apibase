[DEFAULT]
# debug = true


[server:main]
use = egg:Paste#http
#use = egg:gunicorn#main
#workers = 5
#worker_class = gevent
host = 127.0.0.1
port = 5001


[filter-app:main]
use = egg:Beaker#beaker_session
next = sessioned
beaker.session.key = webapi
beaker.session.secret = secret
#beaker.session.secure = true
beaker.session.timeout = 600
beaker.session.cookie_expires = False

# XXX file sessions are slow, should change to memcached or database.  be sure
# to set lock_dir below if using memcached

#beaker.session.type = memory
#beaker.session.type = cookie
beaker.session.validate_key = validate_key
beaker.session.encrypt_key = encrypt_key
#beaker.session.type = file
beaker.session.type = ext:memcached
beaker.session.url = 127.0.0.1:11211
#beaker.session.type = ext:database
#beaker.session.url = mysql+mysqldb://user:password@localhost/database

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
beaker.session.data_dir = %(here)s/data/sessions
beaker.session.lock_dir = %(here)s/data/sessions/lock


[app:sessioned]
use = egg:Paste#urlmap
/ = home
/explorer = explorer
/api = api


[app:home]
use = egg:Paste#static
document_root = %(here)s/web

[app:explorer]
use = egg:Paste#static
document_root = %(here)s/explorer

[app:api]
use = egg:webapi
full_stack = true

cache_dir = %(here)s/data
app_instance_uuid = {097402d5-118a-40a5-8592-7cf2837d0208}

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false

# Logging configuration
[loggers]
keys = root, routes, webapi

[handlers]
keys = console
#keys = wsgi

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console
#handlers = wsgi

[logger_routes]
level = DEBUG
handlers =
qualname = routes.middleware
# "level = INFO" logs the route matched and routing variables.

[logger_webapi]
level = INFO
handlers =
qualname = webapi

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_wsgi]
class = pylons.log.WSGIErrorsHandler
args = ()
level = INFO
formatter = generic

[handler_file]
class = FileHandler
args = ('%(here)s/webapi.log', 'a')
level = INFO
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] [%(threadName)s] %(message)s
datefmt = %H:%M:%S
